// <auto-generated />
using System;
using HomExe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomExe.Data.Migrations
{
    [DbContext(typeof(HomExeContext))]
    partial class HomExeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HomExe.Data.Contract", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"), 1L, 1);

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Created_date");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("End_date");

                    b.Property<int>("PtId")
                        .HasColumnType("int");

                    b.Property<int?>("Schedule")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("PtId");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.HealthReport", b =>
                {
                    b.Property<int>("HealthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthId"), 1L, 1);

                    b.Property<string>("Problems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("HealthId");

                    b.HasIndex("UserId");

                    b.ToTable("HealthReport", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.Pt", b =>
                {
                    b.Property<int>("PtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PtId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Certificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkMeet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Phone")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Schedules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PtId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RoleId");

                    b.ToTable("PT", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.PtCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("PtCategory", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.Recipee", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Pictures")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RecipeId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipee", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.RecipeeCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("RecipeeCategory", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Role1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Role");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Height")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Phone")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Weight")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"), 1L, 1);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PtId")
                        .HasColumnType("int");

                    b.HasKey("VideoId");

                    b.HasIndex("PtId");

                    b.ToTable("Video", (string)null);
                });

            modelBuilder.Entity("HomExe.Data.Contract", b =>
                {
                    b.HasOne("HomExe.Data.Pt", "Pt")
                        .WithMany("Contracts")
                        .HasForeignKey("PtId")
                        .IsRequired()
                        .HasConstraintName("FK_Contract_PT");

                    b.HasOne("HomExe.Data.User", "User")
                        .WithOne("Contract")
                        .HasForeignKey("HomExe.Data.Contract", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Contract_User");

                    b.Navigation("Pt");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomExe.Data.HealthReport", b =>
                {
                    b.HasOne("HomExe.Data.User", "User")
                        .WithMany("HealthReports")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_HealthReport_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomExe.Data.Pt", b =>
                {
                    b.HasOne("HomExe.Data.PtCategory", "Category")
                        .WithMany("Pts")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_PT_PtCategory");

                    b.HasOne("HomExe.Data.Role", "Role")
                        .WithMany("Pts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_PT_Role");

                    b.Navigation("Category");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HomExe.Data.Recipee", b =>
                {
                    b.HasOne("HomExe.Data.RecipeeCategory", "Category")
                        .WithMany("Recipees")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Recipee_RecipeeCategory");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HomExe.Data.Video", b =>
                {
                    b.HasOne("HomExe.Data.Pt", "Pt")
                        .WithMany("Videos")
                        .HasForeignKey("PtId")
                        .IsRequired()
                        .HasConstraintName("FK_Video_PT");

                    b.Navigation("Pt");
                });

            modelBuilder.Entity("HomExe.Data.Pt", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("HomExe.Data.PtCategory", b =>
                {
                    b.Navigation("Pts");
                });

            modelBuilder.Entity("HomExe.Data.RecipeeCategory", b =>
                {
                    b.Navigation("Recipees");
                });

            modelBuilder.Entity("HomExe.Data.Role", b =>
                {
                    b.Navigation("Pts");
                });

            modelBuilder.Entity("HomExe.Data.User", b =>
                {
                    b.Navigation("Contract");

                    b.Navigation("HealthReports");
                });
#pragma warning restore 612, 618
        }
    }
}
